// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace AI.Runtime {
    
    
    public class AIRuntimeFactory {
        
        public static AIRunTimeBase MakeRuntime(AIRuntimeTaskData data, AI.Runtime.AIRunTimeTree tree) {
			AIRunTimeBase rst = null;
			switch (data.type)
			{
				case "Sequence":
					rst = new AIRuntimeSequence();
					break;
				case "Selector":
					rst = new AIRuntimeSelector();
					break;
				case "Inverter":
					rst = new AIRuntimeInverter();
					break;
				case "FindTargetByDistance":
					rst = new AIRuntimeFindTargetByDistance();
					break;
				case "DoSelectNearest":
					rst = new AIRuntimeDoSelectNearest();
					break;
				case "RotateToTarget":
					rst = new AIRuntimeRotateToTarget();
					break;
				case "ValueDistance":
					rst = new AIRuntimeValueDistance();
					break;
				case "NavToTarget":
					rst = new AIRuntimeNavToTarget();
					break;
				case "StopNavMove":
					rst = new AIRuntimeStopNavMove();
					break;
				case "Wait":
					rst = new AIRuntimeWait();
					break;
				case "ValueHP":
					rst = new AIRuntimeValueHP();
					break;
				case "Log":
					rst = new AIRuntimeLog();
					break;
			}
			if (rst != null) rst.Init(data);
			return rst;
        }
    }
}
