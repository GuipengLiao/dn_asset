/*
 * <auto-generated>
 *	 此代码由工具生成 
 *	 手动更改此代码，可能会导致不正确的行为
 * </auto-generated>
 */
#include "[*Table*].h"

[*Table*]::[*Table*](void)
{
	name = UNITY_STREAM_PATH + "Table/[*Table*].bytes";
	ReadTable();
}

void [*Table*]::ReadTable()
{
	LOG("read:"+name);
	Open(name.c_str());
	long long filesize =0;
	int lineCnt = 0;
	Read(&filesize);
	Read(&lineCnt);
	m_data.clear();
	for(int i=0;i<lineCnt;i++)
	{
		[*Table*]Row *row = new [*Table*]Row();
		[**read**]
		m_data.push_back(*row);
	}
	this->Close();
}

void [*Table*]::GetRow(int id,[*Table*]Row* row)
{
	size_t len = m_data.size();
	for(size_t i=0;i<len;i++)
	{
		if(m_data[i].suitid==id)
		{
			*row = m_data[i];
		}
	}
}

int [*Table*]::GetLength()
{
	return (int)m_data.size();
}


extern "C"
{
	[*Table*] *equipsuit;

	int iGet[*Table*]Length()
	{
		if([*table*]==NULL)
		{
			[*table*] = new [*Table*]();
		}
		return [*table*]->GetLength();
	}

	void iGet[*Table*]Row(int suitid,[*Table*]Row* row)
	{
		if([*table*]==NULL)
		{
			[*table*] = new EquipSuit();
		}
		[*table*]->GetRow(suitid,row);
	}
}