/*
 * <auto-generated>
 *	 The code is generated by tools
 *	 Edit manually this code will lead to incorrect behavior
 * </auto-generated>
 */

#include "QteStatusList.h"

QteStatusList::QteStatusList(void)
{
	name = UNITY_STREAM_PATH + "Table/QteStatusList.bytes";
	ReadTable();
}

void QteStatusList::ReadTable()
{
	Open(name.c_str());
	long long filesize =0;
	int lineCnt = 0;
	Read(&filesize);
	Read(&lineCnt);
	m_data.clear();
	for(int i=0;i<lineCnt;i++)
	{
		QteStatusListRow *row = new QteStatusListRow();
		
		ReadString(row->comment);
		ReadString(row->name);
		Read(&(row->value));
		m_data.push_back(*row);
	}
	this->Close();
}

void QteStatusList::GetRow(int idx,QteStatusListRow* row)
{
	size_t len = m_data.size();
	if(idx<(int)len)
	{
		*row = m_data[idx];
	}
	else
	{
		LOG("eror, QteStatusList index out of range, size: "+tostring(len)+" idx: "+tostring(idx));
	}
}


int QteStatusList::GetLength()
{
	return (int)m_data.size();
}


extern "C"
{
	QteStatusList *qtestatuslist;

	int iGetQteStatusListLength()
	{
		if(qtestatuslist==NULL)
		{
			qtestatuslist = new QteStatusList();
		}
		return qtestatuslist->GetLength();
	}

	void iGetQteStatusListRow(int suitid,QteStatusListRow* row)
	{
		if(qtestatuslist==NULL)
		{
			qtestatuslist = new QteStatusList();
		}
		qtestatuslist->GetRow(suitid,row);
	}

}
