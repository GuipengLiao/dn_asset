/*
 * <auto-generated>
 *	 The code is generated by tools
 *	 Edit manually this code will lead to incorrect behavior
 * </auto-generated>
 */

#include "FashionSuit.h"

FashionSuit::FashionSuit(void)
{
	name = UNITY_STREAM_PATH + "Table/FashionSuit.bytes";
	ReadTable();
}

void FashionSuit::ReadTable()
{
	LOG("read:"+name);
	Open(name.c_str());
	long long filesize =0;
	int lineCnt = 0;
	Read(&filesize);
	Read(&lineCnt);
	m_data.clear();
	for(int i=0;i<lineCnt;i++)
	{
		FashionSuitRow *row = new FashionSuitRow();
		
		Read(&(row->suitid));
		ReadString(row->suitname);
		Read(&(row->suitquality));
		ReadString(row->suitatlas);
		ReadString(row->suiticon);
		ReadArray<int>(row->fashionid);
		ReadString(row->effect2);
		ReadString(row->effect3);
		ReadString(row->effect4);
		ReadString(row->effect5);
		ReadString(row->effect6);
		ReadString(row->effect7);
		Read(&(row->all1));
		Read(&(row->all2));
		Read(&(row->all3));
		Read(&(row->all4));
		Read(&(row->all0sp));
		Read(&(row->all1sp));
		Read(&(row->all2sp));
		Read(&(row->all3sp));
		Read(&(row->all4sp));
		Read(&(row->nosale));
		Read(&(row->showlevel));
		Read(&(row->overall));
		m_data.push_back(*row);
	}
	this->Close();
}

void FashionSuit::GetRow(int idx,FashionSuitRow* row)
{
	size_t len = m_data.size();
	if(idx<(int)len)
	{
		*row = m_data[idx];
	}
	else
	{
		LOG("eror, FashionSuit index out of range, size: "+tostring(len)+" idx: "+tostring(idx));
	}
}

int FashionSuit::GetLength()
{
	return (int)m_data.size();
}


extern "C"
{
	FashionSuit *fashionsuit;

	int iGetFashionSuitLength()
	{
		if(fashionsuit==NULL)
		{
			fashionsuit = new FashionSuit();
		}
		return fashionsuit->GetLength();
	}

	void iGetFashionSuitRow(int suitid,FashionSuitRow* row)
	{
		if(fashionsuit==NULL)
		{
			fashionsuit = new FashionSuit();
		}
		fashionsuit->GetRow(suitid,row);
	}
}