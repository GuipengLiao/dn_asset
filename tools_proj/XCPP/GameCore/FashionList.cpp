/*
 * <auto-generated>
 *	 The code is generated by tools
 *	 Edit manually this code will lead to incorrect behavior
 * </auto-generated>
 */

#include "FashionList.h"

FashionList::FashionList(void)
{
	name = UNITY_STREAM_PATH + "Table/FashionList.bytes";
	ReadTable();
}

void FashionList::ReadTable()
{
	LOG("read:"+name);
	Open(name.c_str());
	long long filesize =0;
	int lineCnt = 0;
	Read(&filesize);
	Read(&lineCnt);
	m_data.clear();
	for(int i=0;i<lineCnt;i++)
	{
		FashionListRow *row = new FashionListRow();
		
		Read(&(row->itemid));
		ReadString(row->itemname);
		Read(&(row->equippos));
		Read(&(row->profession));
		Read(&(row->level));
		ReadString(row->quality);
		ReadString(row->directorycomment);
		ReadString(row->modelprefabwarrior);
		ReadString(row->modelprefabarcher);
		ReadString(row->modelprefabsorcer);
		ReadString(row->modelprefabcleric);
		ReadString(row->modelprefab5);
		ReadString(row->modelprefab6);
		ReadString(row->modelprefab7);
		ReadString(row->modelprefab8);
		ReadString(row->presentid);
		ReadArray<int>(row->replaceid);
		ReadString(row->againreplaceid);
		m_data.push_back(*row);
	}
	this->Close();
}

void FashionList::GetRow(int idx,FashionListRow* row)
{
	size_t len = m_data.size();
	if(idx<(int)len)
	{
		*row = m_data[idx];
	}
	else
	{
		LOG("eror, FashionList index out of range, size: "+tostring(len)+" idx: "+tostring(idx));
	}
}

int FashionList::GetLength()
{
	return (int)m_data.size();
}


extern "C"
{
	FashionList *fashionlist;

	int iGetFashionListLength()
	{
		if(fashionlist==NULL)
		{
			fashionlist = new FashionList();
		}
		return fashionlist->GetLength();
	}

	void iGetFashionListRow(int suitid,FashionListRow* row)
	{
		if(fashionlist==NULL)
		{
			fashionlist = new FashionList();
		}
		fashionlist->GetRow(suitid,row);
	}
}